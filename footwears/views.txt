# Initialise Payment with Paystack
def initialize(request):
	if request.is_ajax():
		amount = request.POST['amount']
		email = request.POST['email']
		# Call the endpoint here
		pay = init_payment(email,amount)

		if pay['status'] == False:
			msg = {"Error": "Error. Please try again."}
			return JsonResponse(msg)
		else:
			msg = {"link": pay['data']['authorization_url']}
			# Save Reference Code with product details to Database
			# pay['data']['reference']
			return JsonResponse(msg)




#################### Context processor should render product 2 dynamically
# def baseec(request):
# 	product2 = Category.objects.all()
# 	return {'product2' : product2}



#################### SECURITY
# def loginpage(request):
#   if request.user.is_authenticated:
#     return redirect('home')

#   if request.method == 'POST':
#     next = request.POST.get('next', '/')
#     user = authenticate(request,username=request.POST['username'],password=request.POST['password'])
#     if user:
#       login(request,user)
#       return redirect(next)
#   return render(request,'footwears/login.html')

# def logoutpage(request):
#   logout(request)
#   return redirect('home')

# def register(request):
#     return render(request, 'footwears/register.html')





if results['data']['status'] == 'success':
	PayHistory.objects.create(
		user=user, purpose="wallet",
		paystack_charge_id=results["data"]["reference"],
		amount=results["data"]["amount"], paid=True, status=True
	)
else:
	PayHistory.objects.create(
		user=user, purpose="wallet",
		paystack_charge_id=results["data"]["reference"],
		amount=results["data"]["amount"], paid=True, status=False
	)